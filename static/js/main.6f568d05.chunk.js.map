{"version":3,"sources":["components/Star.jsx","components/ProductCard.jsx","components/StatefulProductList.jsx","App.js","endpoint.config.js","reportWebVitals.js","index.js"],"names":["Star","props","rating","stars","repeat","Math","ceil","ProductCard","productData","name","id","description","seller_name","last_updated","location","available_count","price","star_rating","review_count","useStyletron","css","title","headerImage","className","fontWeight","fontSize","StatefulProductList","array","numProductPerPage","avaliableProducts","numPages","length","React","useState","currentPage","setCurrentPage","gridColumns","gridGaps","gridGutters","splice","map","ProductPagination","onPageChange","nextPage","min","max","overrides","Root","style","$theme","display","justifyContent","marginBottom","borderTop","borderBottom","engine","Styletron","fetchOptions","method","header","App","setAvaliableProducts","useEffect","fetch","then","response","json","value","theme","LightTheme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f568d05.chunk.js","sourcesContent":["export default function Star(props) {\n  const {\n    rating\n  } = props;\n\n  const stars = '‚≠ê'.repeat( Math.ceil(rating) );\n\n  return (\n    <>{stars}</>\n  )\n}\n","import React from 'react'\nimport { useStyletron } from \"styletron-react\";\n\nimport {\n  Card,\n  StyledBody,\n  // StyledThumbnail\n} from \"baseui/card\";\nimport Star from \"./Star\";\n\nexport default function ProductCard(props) {\n  const {\n    name,\n    id,\n    description,\n    seller_name,\n    last_updated,\n    location,\n    available_count,\n    price,\n    star_rating,\n    review_count\n  } = props.productData;\n  const [css] = useStyletron();\n\n  return (\n    <Card\n      title={name}\n      headerImage={`https://source.unsplash.com/user/erondu/1600x900?${id}`}\n    >\n      {/* <StyledThumbnail src={`https://source.unsplash.com/user/erondu/512x512?${id}`} /> */}\n      <StyledBody>\n        <p>\n          <span className={css({\n            fontWeight: '800',\n            fontSize: \"2em\"\n          })}>{price}</span>\n          <span> {available_count} left</span>\n        </p>\n        <p>\n          {`by ${seller_name} from ${location} `}\n          <br />\n          <Star rating={star_rating} />\n          ({review_count})\n        </p>\n        <p>{description}</p>\n        <p>{last_updated}</p>\n      </StyledBody>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { Pagination } from \"baseui/pagination\";\nimport ProductCard from './ProductCard'\nimport {Grid, Cell} from 'baseui/layout-grid';\n\nexport default function StatefulProductList(props) {\n  const {\n    numProductPerPage,\n    avaliableProducts\n  } = props;\n  const numPages = Math.ceil( avaliableProducts.length/numProductPerPage )\n\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const getCurrentProductRange = (array) => [...array].splice((currentPage-1)*numProductPerPage, numProductPerPage)\n\n  return (\n    <>\n      <ProductPagination numPages={numPages} currentPage={currentPage} setCurrentPage={setCurrentPage} />\n      <Grid\n        gridColumns={[1, 2, 2]}\n        gridGaps={[12, 24, 24]}\n        gridGutters={[12, 12, 12]}\n      >\n        {getCurrentProductRange(avaliableProducts).map((productData) =>\n          <Cell>\n            <ProductCard\n              key={productData.id}\n              productData={productData}\n            />\n          </Cell>\n        )}\n      </Grid>\n      <ProductPagination numPages={numPages} currentPage={currentPage} setCurrentPage={setCurrentPage} />\n    </>\n  )\n}\n\nconst ProductPagination = (props)=> {\n  const {numPages, currentPage, setCurrentPage} = props\n  return (\n    <Pagination\n      numPages={numPages}\n      currentPage={currentPage}\n      onPageChange={({ nextPage }) => {\n        setCurrentPage(\n          Math.min(Math.max(nextPage, 1), 20)\n        );\n      }}\n      overrides={{\n        Root: {\n          style: ({ $theme }) => ({\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '1em',\n            borderTop: '1px #ccc solid',\n            borderBottom: '1px #ccc solid'\n          })\n        }\n      }}\n    />\n  )\n}","import React from 'react';\nimport {Client as Styletron} from 'styletron-engine-atomic';\nimport {Provider as StyletronProvider} from 'styletron-react';\nimport {LightTheme, BaseProvider} from 'baseui';\nimport StatefulProductList from \"./components/StatefulProductList\";\n\nimport { API_BASE } from './endpoint.config'\n\nconst engine = new Styletron();\n\nconst fetchOptions = {\n  method: 'GET',\n  header: { 'Content-Type': 'application/json' },\n};\n\nfunction App() {\n  const [avaliableProducts, setAvaliableProducts] = React.useState([]);\n\n  React.useEffect(() => {\n    fetch(`${API_BASE}/products.json`, fetchOptions).then( (response) => {\n      response.json().then((json)=>{\n        setAvaliableProducts(json['review'])\n      })\n    })\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <StyletronProvider value={engine}>\n        <BaseProvider theme={LightTheme}>\n          <StatefulProductList avaliableProducts={avaliableProducts} numProductPerPage={5} />\n        </BaseProvider>\n      </StyletronProvider>\n    </div>\n  );\n}\n\nexport default App;\n","export const API_BASE = 'api';","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}